apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "otus-users.fullname" . }}
  labels:
    {{- include "otus-users.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "otus-users.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "otus-users.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command: [ 'sh', '-c', 'until nc -z -v -w30 {{ .Release.Name }}-postgresql {{ .Values.postgresql.service.port }}; do echo "Waiting for PostgreSQL..."; sleep 5; done' ]
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-configmap
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-auth
                  key: password

